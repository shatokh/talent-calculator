# .github/workflows/playwright.yml
name: Playwright Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: write

on:
  push:
    branches: [dev]
  pull_request:
    branches: [master]

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        # настроено в playwright.config.ts: webServer и репортеры (junit/html)
        run: npx playwright test

      # HTML-отчёт Playwright
      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/

      # JUnit-XML результаты (нужно включить в playwright.config.ts):
      #   reporter: [['junit', { outputFile: 'test-results/results.xml' }]]
      - name: Upload JUnit Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: test-results/**/*.xml

      # Скриншоты при падениях (если у вас в playwright.config.ts включено сохранение):
      #   screenshot: 'only-on-failure'
      - name: Upload Failure Screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: failure-screenshots
          path: test-results/screenshots/

      # Видео проваленных тестов (если включено video: 'retry-with-video')
      - name: Upload Failure Videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: failure-videos
          path: test-results/videos/
